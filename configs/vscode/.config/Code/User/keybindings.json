// Place your key bindings in this file to override the defaults
[
  // Move between tabs
  {
    "key": "shift+L",
    "command": "workbench.action.nextEditor",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+H",
    "command": "workbench.action.previousEditor",
    "when": "editorTextFocus"
  },
  // **** Terminal ****
  // When in the editor, run the selected text in the terminal
  {
    "key": "ctrl+enter",
    "command": "workbench.action.terminal.runSelectedText",
    "when": "editorTextFocus"
  },
  // cycle to next terminal session
  {
    "key": "ctrl+l",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  // cycle to prev terminal session
  {
    "key": "ctrl+h",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+m",
    "command": "markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  // **** Git ****
  // Open file's a diff mode
  {
    "key": "alt+g",
    "command": "git.openChange",
    "when": "!isInDiffEditor && editorTextFocus"
  },
  // Open a file from its diff mode
  {
    "key": "alt+g",
    "command": "git.openFile",
    "when": "isInDiffEditor && editorTextFocus"
  },
  {
    "key": "ctrl+n",
    "command": "editor.action.marker.next",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+p",
    "command": "editor.action.marker.prev",
    "when": "editorTextFocus"
  },
  // Source control
  {
    "key": "ctrl+x",
    "command": "git.unstageSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "s",
    "command": "git.stage",
    "when": "listFocus && sideBarFocus && activeViewlet == 'workbench.view.scm'"
  },
  {
    "key": "shift+s",
    "command": "git.stageAll",
    "when": "listFocus && sideBarFocus && activeViewlet == 'workbench.view.scm'"
  },
  {
    "key": "x",
    "command": "git.unstage",
    "when": "listFocus && sideBarFocus && activeViewlet == 'workbench.view.scm'"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "isInDiffEditor && textCompareEditorVisible"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "isInDiffEditor && textCompareEditorVisible"
  },
  {
    "key": "ctrl+shift+s",
    "command": "git.stageSelectedRanges",
    "when": "isInDiffEditor && textCompareEditorVisible"
  },
  {
    "key": "x",
    "command": "git.revertSelectedRanges",
    "when": "isInDiffEditor && textCompareEditorVisible"
  },
  // **** Open Settings ****
  {
    "key": "ctrl+,",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  // **** General ****
  {
    "key": "ctrl+shift+i",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "ctrl+shift+e",
    "command": "workbench.action.toggleSidebarVisibility"
  },

  {
    "key": "alt+e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "j",
    "command": "list.focusDown",
    "when": "listFocus && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "k",
    "command": "list.focusUp",
    "when": "listFocus && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "tab",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "enter",
    "command": "list.select",
    "when": "explorerViewletVisible && filesExplorerFocus"
  },
  {
    "key": "l",
    "command": "list.select",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "o",
    "command": "list.toggleExpand",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "h",
    "command": "list.collapse",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+;",
    "command": "insertPrevSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "ctrl+l",
    "when": "sideBarFocus",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+t",
    "command": "workbench.action.terminal.focus",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+j",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.terminal.focus",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+shift+t",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "shift+k",
    "command": "editor.action.showHover",
    "when": "editorTextFocus && neovim.mode == 'normal'"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+tab",
    "command": "-acceptAlternativeSelectedSuggestion",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+f",
    "command": "-vscode-neovim.ctrl-f",
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
  },
  // Save file
  {
    "key": "ctrl+s",
    "command": "workbench.action.files.save"
  }
]
